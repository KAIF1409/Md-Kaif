/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2) {
    if (list1 == NULL) return list2;
    if (list2 == NULL) return list1;

    struct ListNode *temp = NULL, *head = NULL;

    // Initialize the head pointer to the first node
    if (list1->val <= list2->val) {
        head = temp = list1;
        list1 = list1->next;
    } else {
        head = temp = list2;
        list2 = list2->next;
    }

    // Traverse both lists and merge them in sorted order
    while (list1 != NULL && list2 != NULL) {
        if (list1->val <= list2->val) {
            temp->next = list1;
            list1 = list1->next;
        } else {
            temp->next = list2;
            list2 = list2->next;
        }
        temp = temp->next;
    }

    // Attach the remaining part of the non-empty list
    if (list1 != NULL) {
        temp->next = list1;
    } else {
        temp->next = list2;
    }

    return head;
}
